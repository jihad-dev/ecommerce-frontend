import { Navigate, useLocation } from "react-router-dom";
import { useAppSelector } from "../Redux/hooks";

interface PrivateRouteProps {
  children: React.ReactNode;
  allowedRoles?: string[]; // optional: ржХрзЛржи рж░рзЛрж▓ ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ ржкрж╛ржмрзЗ
}

const PrivateRoute = ({ children, allowedRoles = ["admin", "user"] }: PrivateRouteProps) => {
  const user = useAppSelector((state) => state.auth.user);
  const location = useLocation();
  if (!user) {
    // ЁЯФТ рж▓ржЧржЗржи ржХрж░рж╛ ржирж╛ ржерж╛ржХрж▓рзЗ login page ржП ржкрж╛ржарж╛ржУ
    return <Navigate to="/login" state={{ from: location }} replace />;
  }

  if (!allowedRoles.includes(user.role)) {
    // тЭМ ржЗржЙржЬрж╛рж░ рж░рзЛрж▓ ржорзЗрж▓рзЗ ржирж╛ тЖТ unauthorized page ржП ржкрж╛ржарж╛ржУ
    return <Navigate to="/unauthorized" replace />;
  }

  // тЬЕ рж╕ржм ржарж┐ржХ ржерж╛ржХрж▓рзЗ ржЪрж╛ржЗрж▓рзНржб рж░рзЗржирзНржбрж╛рж░ ржХрж░рзЛ
  return <>{children}</>;
};

export default PrivateRoute;
